version: '3.9'

services:
  nginx:
    image: nginx:1-alpine
    ports:
      - "443:443"
    volumes:
      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/nginx/certs
    networks:
      - app-network
    depends_on:
      - backend
      - frontend
      - broker

  postgres:
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=$DB_PASS
      - POSTGRES_USER=$DB_USER
      - POSTGRES_DB=$DB_NAME
      - PGUSER=$DB_USER
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      timeout: 10s
      retries: 3

  redis:
    image: redis:latest
    networks:
      - app-network
    ports:
      - "6379:6379"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    image: ghcr.io/petersaletra/kittyplant-backend:latest
    ports:
      - 8000:$APP_PORT
    environment:
      - PORT=$APP_PORT
      - JWT_SECRET=$JWT_SECRET
      - DB_HOST=$DB_HOST
      - DB_PORT=$DB_PORT
      - DB_NAME=$DB_NAME
      - DB_USER=$DB_USER
      - DB_PASS=$DB_PASS
      - REDIS_HOST=$REDIS_HOST
      - BROKER=$BROKER
      - BROKER_USER=$BROKER_USER
      - BROKER_PASSWORD=$BROKER_PASSWORD
    volumes:
      - ./backend:/app
    networks:
      - app-network
    restart: on-failure
    depends_on:
      postgres:
          condition: service_healthy
      redis:
          condition: service_healthy
      broker:
          condition: service_started

  frontend:
    image: ghcr.io/petersaletra/kittyplant-frontend:latest
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - backend

  broker:
    image: eclipse-mosquitto:latest
    ports:
      - "1883:1883"
    volumes:
      - ./conf/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./conf/mosquitto/passwd_file:/mosquitto/config/passwd_file
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
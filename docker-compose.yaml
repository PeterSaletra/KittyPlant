version: '3.9'

services:
  nginx:
    image: nginx:1-alphine
    ports:
      - "80:80"
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
    depends_on:
      - backend
      - frontend

  postgres:
    image: postgres:17-alphine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=$DB_PASS
      - POSTGRES_USER=$DB_USER
      - POSTGRES_DB=$DB_NAME
      - PGUSER=$DB_USER
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      timeout: 10s
      retries: 3

  redis:
    image: redis:latest
    networks:
      - app-network
    volumes:
      - redis: /data
    ports:
      - "6379:6379"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./kittyplant-api
      dockerfile: Dockerfile
    ports:
      - 8000:$APP_PORT
    environment:
      - PORT=$APP_PORT
      - JWT_SECRET=$JWT_SECRET
      - DB_HOST=postgres
      - DB_PORT=$DB_PORT
      - DB_NAME=$DB_NAME
      - DB_USER=$DB_USER
      - DB_PASS=$DB_PASS
      - REDIS_HOST=$REDIS_HOST
      - REDIS_PORT=$REDIS_PORT
    volumes:
      - ./backend:/app
    networks:
      - app-natwork
    restart: on-failure
    depends_on:
      - postgres:
         condition: service_healthy
      - redis:
         condition: service_healthy

  frontend:
    build:
      context: ./kittyplant-app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - backend

  broker:
    image: eclipse-mosquitto:latest
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./conf/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./conf/mosquitto/passwd_file:/mosquitto/config/passwd_file
    networks:
      - app-network

networks:
  app-network:
    driver: bridge